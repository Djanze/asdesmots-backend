
// pipeline{
//     agent any
//     options{
//         buildDiscarder(logRotator(numToKeepStr: '5', daysToKeepStr: '5'))
//         timestamps()
//     }
//     environment{
        
//         registry = "yabain/asdesmots-backend"
//         registryCredential = credentials('dockerhub')        
//     }
    
//     stages{
//        stage('Building image') {
//       steps{
//         script {
//           dockerImage = docker.build registry + ":$BUILD_NUMBER"
//         }
//       }
//     }
//        stage('Deploy Image') {
//       steps{
//          script {
//             docker.withRegistry( '', registryCredential ) {
//             dockerImage.push()
//           }
//         }
//       }
//     }
// }

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  environment {
    DOCKERHUB_CREDENTIALS = credentials('dockerhub')
  }
  stages {
    stage('Build') {
      steps {
        sh 'docker build -t yabain/asdesmots-backend .'
      }
    }
    stage('Login') {
      steps {
        sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
      }
    }
    stage('Push') {
      steps {
        sh 'docker push yabain/asdesmots-backend'
      }
    }
  }
  post {
    always {
      sh 'docker logout'
    }
  }
}

// pipeline {
//     environment {
//         registry = "yabain/asdesmots-backend"
//         registryCredential = 'dockerhub'
//         dockerImage = 'asdesmots-backend'
//     }
//     agent any
//     stages {
        
//         stage('Building our image') {
//             steps{
//                 script {
//                     dockerImage = docker.build registry + ":$BUILD_NUMBER"
//                 }
//             }
//         }
//         stage('Deploy our image') {
//             steps{
//                 script {
//                     docker.withRegistry( '', registryCredential ) {
//                         dockerImage.push()
//                     }
//                 }
//             }
//         }
//         stage('Cleaning up') {
//             steps{
//                 sh "docker rmi --force $registry:$BUILD_NUMBER"
//             }
//         }
//     }
// }

